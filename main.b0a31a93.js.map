{"version":3,"sources":["scripts/main.js"],"names":["headers","document","querySelector","firstElementChild","children","tbody","people","forEach","header","setAttribute","addEventListener","e","copyHeaders","splice","target","cellIndex","head","sort","person1","person2","per1","textContent","per2","getAttribute","slice","replaceAll","localeCompare","append","person","copyPeople","employee","classList","remove","add","body","insertAdjacentHTML","form","preventDefault","data","FormData","salary","get","toString","replace","message","createElement","length","reset","setTimeout","cells","querySelectorAll","cell","index","indexOf","copyCells","copyCell","removedText","input","value","type","savedText","currentCell","ev","key"],"mappings":"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","file":"main.b0a31a93.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst headers = [...document.querySelector('thead').firstElementChild.children];\nconst tbody = document.querySelector('tbody');\nlet people = [...document.querySelector('tbody').children];\n\nheaders.forEach(header => {\n  header.setAttribute('Order', 'asc');\n\n  header.addEventListener('click', (e) => {\n    const copyHeaders = [...headers];\n\n    copyHeaders.splice(e.target.cellIndex, 1);\n    copyHeaders.forEach(head => head.setAttribute('Order', 'asc'));\n\n    people.sort((person1, person2) => {\n      let per1 = person1.children[e.target.cellIndex].textContent;\n      let per2 = person2.children[e.target.cellIndex].textContent;\n\n      if (header.getAttribute('Order') === 'dsc') {\n        per1 = per2;\n        per2 = person1.children[e.target.cellIndex].textContent;\n      }\n\n      if (e.target.cellIndex === 4) {\n        per1 = +per1.slice(1).replaceAll(',', '');\n        per2 = +per2.slice(1).replaceAll(',', '');\n\n        return per1 - per2;\n      };\n\n      return per1.localeCompare(per2);\n    });\n\n    header.getAttribute('Order') === 'asc'\n      ? header.setAttribute('Order', 'dsc')\n      : header.setAttribute('Order', 'asc');\n\n    tbody.append(...people);\n  });\n});\n\npeople.forEach(person => {\n  person.addEventListener('click', (e) => {\n    const copyPeople = [...people];\n\n    copyPeople.splice(e.target.cellIndex, 0);\n    copyPeople.forEach(employee => employee.classList.remove('active'));\n\n    person.classList.add('active');\n  });\n});\n\ndocument.body.insertAdjacentHTML('beforeend', `\n  <form class=\"new-employee-form\" action=\"/\" method=\"GET\">\n    <label>\n      Name: <input name=\"name\" type=\"text\"  data-qa=\"name\">\n    </label>\n\n    <label>\n      Position: <input name=\"position\" type=\"text\" data-qa=\"position\">\n    </label>\n\n    <label>\n      Office: <select name=\"office\" data-qa=\"office\">\n        <option>Tokyo</option>\n        <option>Singapore</option>\n        <option>London</option>\n        <option>New York</option>\n        <option>Edinburgh</option>\n        <option>San Francisco</option>\n      </select>\n    </label>\n\n    <label>\n      Age: <input name=\"age\" data-qa=\"age\" type=\"number\">\n    </label>\n\n    <label>\n      Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\">\n    </label>\n\n    <button type=\"submit\">Save to table</button>\n  </form>\n`);\n\nconst form = document.querySelector('.new-employee-form');\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const data = new FormData(form);\n  const salary = data.get('salary')\n    .toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n  const message = document.createElement('div');\n\n  message.setAttribute('data-qa', 'notification');\n  message.classList.add('notification');\n\n  if (data.get('name').length < 4) {\n    message.classList.add('error');\n\n    message.insertAdjacentHTML('afterbegin', `\n      <h2 class=\"title\">INCORRECT NAME</h2>\n      <span>\n        Please type in correct name. Name should have at least 4 letters.\n      </span>\n    `);\n  } else if (data.get('age') < 18 || data.get('age') > 90) {\n    message.classList.add('error');\n\n    message.insertAdjacentHTML('afterbegin', `\n      <h2 class=\"title\">INCORRECT AGE</h2>\n      <span>\n        Please type in correct age.\n        Employee's age should be at least 18 and not more than 90.\n      </span>\n    `);\n  } else if (data.get('position').length <= 5) {\n    message.classList.add('error');\n\n    message.insertAdjacentHTML('afterbegin', `\n      <h2 class=\"title\">INCORRECT POSITION</h2>\n      <span>\n        Please type in full name of your position.\n      </span>\n    `);\n  } else {\n    message.classList.add('success');\n\n    message.insertAdjacentHTML('afterbegin', `\n      <h2 class=\"title\">SUCCESS</h2>\n      <span>\n        New employee was added!\n      </span>\n    `);\n\n    tbody.insertAdjacentHTML('beforeend', `\n    <tr>\n      <td>${data.get('name')}</td>\n      <td>${data.get('position')}</td>\n      <td>${data.get('office')}</td>\n      <td>${data.get('age')}</td>\n      <td>$${salary}</td>\n    </tr>\n  `);\n\n    people = [...tbody.children];\n\n    form.reset();\n  }\n\n  document.body.append(message);\n\n  setTimeout(() => {\n    message.remove();\n  }, 2000);\n});\n\nconst cells = [...document.querySelectorAll('td')];\n\ncells.forEach(cell => {\n  const index = cells.indexOf(cell);\n\n  cell.setAttribute('data-editing', 'yes');\n\n  cell.addEventListener('dblclick', (e) => {\n    const copyCells = [...cells];\n\n    copyCells.splice(index, 1);\n    copyCells.forEach(copyCell => copyCell.setAttribute('data-editing', 'no'));\n\n    if (cell.getAttribute('data-editing') === 'yes') {\n      const removedText = cell.textContent;\n\n      cell.textContent = '';\n\n      const input = document.createElement('input');\n\n      input.value = removedText;\n      input.type = 'text';\n      input.classList.add('cell-input');\n\n      cell.append(input);\n\n      input.addEventListener('blur', () => {\n        const savedText = input.value;\n\n        input.remove();\n\n        cell.textContent = savedText;\n\n        cells.forEach(currentCell => currentCell\n          .setAttribute('data-editing', 'yes'));\n      });\n\n      input.addEventListener('keypress', (ev) => {\n        if (ev.key === 'Enter') {\n          const savedText = input.value;\n\n          input.remove();\n\n          cell.textContent = savedText;\n\n          cells.forEach(currentCell => currentCell\n            .setAttribute('data-editing', 'yes'));\n        }\n      });\n    };\n  });\n});\n"]}